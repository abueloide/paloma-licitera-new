#!/bin/bash

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üßπ ====================================================="
echo "   PALOMA LICITERA - LIMPIEZA DE INSTALACI√ìN"
echo "   Limpia instalaciones fallidas o parciales"
echo -e "=====================================================${NC}"
echo ""

echo -e "${YELLOW}‚ö†Ô∏è  Este script eliminar√° completamente:${NC}"
echo "   ‚Ä¢ Todos los contenedores Docker de Paloma"
echo "   ‚Ä¢ Im√°genes Docker construidas"
echo "   ‚Ä¢ Vol√∫menes de datos Docker"
echo "   ‚Ä¢ Archivos temporales"
echo ""

echo -n "¬øEst√°s seguro de que quieres continuar? (y/N): "
read -r response
if [[ ! "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo "Operaci√≥n cancelada"
    exit 0
fi

echo ""
echo -e "${BLUE}üîÑ Iniciando limpieza completa...${NC}"

# Detener todos los servicios
echo -e "${YELLOW}‚èπÔ∏è  Deteniendo servicios...${NC}"
docker-compose down -v 2>/dev/null || true
./docker-stop.sh 2>/dev/null || true

# Limpiar contenedores espec√≠ficos
echo -e "${YELLOW}üóëÔ∏è  Eliminando contenedores...${NC}"
docker ps -a | grep paloma | awk '{print $1}' | xargs docker rm -f 2>/dev/null || true

# Limpiar im√°genes relacionadas con el proyecto
echo -e "${YELLOW}üñºÔ∏è  Eliminando im√°genes...${NC}"
docker images | grep paloma | awk '{print $3}' | xargs docker rmi -f 2>/dev/null || true
docker images | grep none | awk '{print $3}' | xargs docker rmi -f 2>/dev/null || true

# Limpiar vol√∫menes
echo -e "${YELLOW}üíæ Eliminando vol√∫menes...${NC}"
docker volume ls | grep paloma | awk '{print $2}' | xargs docker volume rm -f 2>/dev/null || true

# Limpieza general del sistema Docker
echo -e "${YELLOW}üßΩ Limpieza general de Docker...${NC}"
docker system prune -f 2>/dev/null || true
docker image prune -f 2>/dev/null || true
docker volume prune -f 2>/dev/null || true
docker network prune -f 2>/dev/null || true

# Limpiar archivos temporales y logs antiguos
echo -e "${YELLOW}üìÑ Limpiando archivos temporales...${NC}"
rm -f .backend.pid .frontend.pid 2>/dev/null || true
rm -f /tmp/docker-build.log 2>/dev/null || true
rm -rf logs/*.log.* 2>/dev/null || true

# Limpiar directorios de datos si el usuario quiere
echo ""
echo -n "¬øQuieres tambi√©n eliminar los datos descargados? (y/N): "
read -r data_response
if [[ "$data_response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo -e "${YELLOW}üóÇÔ∏è  Eliminando datos...${NC}"
    rm -rf data/raw/* 2>/dev/null || true
    rm -rf data/processed/* 2>/dev/null || true
    echo "   ‚úÖ Datos eliminados"
else
    echo "   ‚ÑπÔ∏è  Datos conservados"
fi

echo ""
echo -e "${GREEN}‚úÖ LIMPIEZA COMPLETADA${NC}"
echo ""
echo -e "${BLUE}üìã Se han limpiado:${NC}"
echo "   ‚Ä¢ Contenedores Docker"
echo "   ‚Ä¢ Im√°genes Docker"
echo "   ‚Ä¢ Vol√∫menes Docker"
echo "   ‚Ä¢ Archivos temporales"
echo "   ‚Ä¢ Logs antiguos"
echo ""
echo -e "${CYAN}üöÄ Ahora puedes ejecutar una instalaci√≥n limpia:${NC}"
echo "   ./install.sh"
echo ""